/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type HelloStructStruct = { name: string; age: BigNumberish };

export type HelloStructStructOutput = [string, number] & {
  name: string;
  age: number;
};

export interface HelloInterface extends utils.Interface {
  functions: {
    "changeSuffix(string)": FunctionFragment;
    "getHello(uint256)": FunctionFragment;
    "sayHello(string)": FunctionFragment;
    "setHello((string,uint8))": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "changeSuffix",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getHello",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "sayHello", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setHello",
    values: [HelloStructStruct]
  ): string;

  decodeFunctionResult(
    functionFragment: "changeSuffix",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getHello", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sayHello", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setHello", data: BytesLike): Result;

  events: {};
}

export interface Hello extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: HelloInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    changeSuffix(
      suffix: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getHello(
      key: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[HelloStructStructOutput]>;

    sayHello(name: string, overrides?: CallOverrides): Promise<[string]>;

    setHello(
      hello: HelloStructStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  changeSuffix(
    suffix: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getHello(
    key: BigNumberish,
    overrides?: CallOverrides
  ): Promise<HelloStructStructOutput>;

  sayHello(name: string, overrides?: CallOverrides): Promise<string>;

  setHello(
    hello: HelloStructStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    changeSuffix(suffix: string, overrides?: CallOverrides): Promise<string>;

    getHello(
      key: BigNumberish,
      overrides?: CallOverrides
    ): Promise<HelloStructStructOutput>;

    sayHello(name: string, overrides?: CallOverrides): Promise<string>;

    setHello(
      hello: HelloStructStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber, HelloStructStructOutput]>;
  };

  filters: {};

  estimateGas: {
    changeSuffix(
      suffix: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getHello(key: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    sayHello(name: string, overrides?: CallOverrides): Promise<BigNumber>;

    setHello(
      hello: HelloStructStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    changeSuffix(
      suffix: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getHello(
      key: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    sayHello(
      name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setHello(
      hello: HelloStructStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
