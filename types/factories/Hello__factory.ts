/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Hello, HelloInterface } from "../Hello";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_defaultSuffix",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "suffix",
        type: "string",
      },
    ],
    name: "changeSuffix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "getHello",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "age",
            type: "uint8",
          },
        ],
        internalType: "struct Hello.HelloStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "sayHello",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "age",
            type: "uint8",
          },
        ],
        internalType: "struct Hello.HelloStruct",
        name: "hello",
        type: "tuple",
      },
    ],
    name: "setHello",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "age",
            type: "uint8",
          },
        ],
        internalType: "struct Hello.HelloStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000dac38038062000dac833981810160405281019062000037919062000179565b80600090805190602001906200004f92919062000057565b50506200032e565b828054620000659062000253565b90600052602060002090601f016020900481019282620000895760008555620000d5565b82601f10620000a457805160ff1916838001178555620000d5565b82800160010185558215620000d5579182015b82811115620000d4578251825591602001919060010190620000b7565b5b509050620000e49190620000e8565b5090565b5b8082111562000103576000816000905550600101620000e9565b5090565b60006200011e6200011884620001e7565b620001be565b9050828152602081018484840111156200013757600080fd5b620001448482856200021d565b509392505050565b600082601f8301126200015e57600080fd5b81516200017084826020860162000107565b91505092915050565b6000602082840312156200018c57600080fd5b600082015167ffffffffffffffff811115620001a757600080fd5b620001b5848285016200014c565b91505092915050565b6000620001ca620001dd565b9050620001d8828262000289565b919050565b6000604051905090565b600067ffffffffffffffff821115620002055762000204620002ee565b5b62000210826200031d565b9050602081019050919050565b60005b838110156200023d57808201518184015260208101905062000220565b838111156200024d576000848401525b50505050565b600060028204905060018216806200026c57607f821691505b60208210811415620002835762000282620002bf565b5b50919050565b62000294826200031d565b810181811067ffffffffffffffff82111715620002b657620002b5620002ee565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610a6e806200033e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063027e88d7146100515780631da79a11146100815780631da8fda8146100b1578063c3a9b1c5146100e2575b600080fd5b61006b60048036038101906100669190610525565b610112565b604051610078919061079f565b60405180910390f35b61009b600480360381019061009691906105a7565b6101bd565b6040516100a891906107c1565b60405180910390f35b6100cb60048036038101906100c69190610566565b610299565b6040516100d99291906107e3565b60405180910390f35b6100fc60048036038101906100f79190610525565b61031f565b604051610109919061079f565b60405180910390f35b6060816000908051906020019061012a92919061036f565b50600080546101389061090f565b80601f01602080910402602001604051908101604052809291908181526020018280546101649061090f565b80156101b15780601f10610186576101008083540402835291602001916101b1565b820191906000526020600020905b81548152906001019060200180831161019457829003601f168201915b50505050509050919050565b6101c56103f5565b600260008381526020019081526020016000206040518060400160405290816000820180546101f39061090f565b80601f016020809104026020016040519081016040528092919081815260200182805461021f9061090f565b801561026c5780601f106102415761010080835404028352916020019161026c565b820191906000526020600020905b81548152906001019060200180831161024f57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff16815250509050919050565b60006102a36103f5565b6102ad600161034b565b82600260006102bc6001610361565b815260200190815260200160002060008201518160000190805190602001906102e692919061036f565b5060208201518160010160006101000a81548160ff021916908360ff1602179055509050506103156001610361565b8391509150915091565b6060816000604051602001610335929190610770565b6040516020818303038152906040529050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b82805461037b9061090f565b90600052602060002090601f01602090048101928261039d57600085556103e4565b82601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f19190610412565b5090565b604051806040016040528060608152602001600060ff1681525090565b5b8082111561042b576000816000905550600101610413565b5090565b600061044261043d84610838565b610813565b90508281526020810184848401111561045a57600080fd5b6104658482856108cd565b509392505050565b600082601f83011261047e57600080fd5b813561048e84826020860161042f565b91505092915050565b6000604082840312156104a957600080fd5b6104b36040610813565b9050600082013567ffffffffffffffff8111156104cf57600080fd5b6104db8482850161046d565b60008301525060206104ef84828501610510565b60208301525092915050565b60008135905061050a81610a0a565b92915050565b60008135905061051f81610a21565b92915050565b60006020828403121561053757600080fd5b600082013567ffffffffffffffff81111561055157600080fd5b61055d8482850161046d565b91505092915050565b60006020828403121561057857600080fd5b600082013567ffffffffffffffff81111561059257600080fd5b61059e84828501610497565b91505092915050565b6000602082840312156105b957600080fd5b60006105c7848285016104fb565b91505092915050565b60006105db8261087e565b6105e58185610889565b93506105f58185602086016108dc565b6105fe816109d0565b840191505092915050565b60006106148261087e565b61061e818561089a565b935061062e8185602086016108dc565b610637816109d0565b840191505092915050565b600061064d8261087e565b61065781856108ab565b93506106678185602086016108dc565b80840191505092915050565b600081546106808161090f565b61068a81866108ab565b945060018216600081146106a557600181146106b6576106e9565b60ff198316865281860193506106e9565b6106bf85610869565b60005b838110156106e1578154818901526001820191506020810190506106c2565b838801955050505b50505092915050565b60006106ff600b836108ab565b915061070a826109e1565b600b82019050919050565b6000604083016000830151848203600086015261073282826105d0565b91505060208301516107476020860182610761565b508091505092915050565b61075b816108b6565b82525050565b61076a816108c0565b82525050565b600061077b826106f2565b91506107878285610642565b91506107938284610673565b91508190509392505050565b600060208201905081810360008301526107b98184610609565b905092915050565b600060208201905081810360008301526107db8184610715565b905092915050565b60006040820190506107f86000830185610752565b818103602083015261080a8184610715565b90509392505050565b600061081d61082e565b90506108298282610941565b919050565b6000604051905090565b600067ffffffffffffffff821115610853576108526109a1565b5b61085c826109d0565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156108fa5780820151818401526020810190506108df565b83811115610909576000848401525b50505050565b6000600282049050600182168061092757607f821691505b6020821081141561093b5761093a610972565b5b50919050565b61094a826109d0565b810181811067ffffffffffffffff82111715610969576109686109a1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f57656c636f6d6520746f20000000000000000000000000000000000000000000600082015250565b610a13816108b6565b8114610a1e57600080fd5b50565b610a2a816108c0565b8114610a3557600080fd5b5056fea2646970667358221220841f60400c33d543538fee9a9fd5a433198441d7f747f7ed11cea1da8705cd9464736f6c63430008040033";

type HelloConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hello__factory extends ContractFactory {
  constructor(...args: HelloConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _defaultSuffix: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Hello> {
    return super.deploy(_defaultSuffix, overrides || {}) as Promise<Hello>;
  }
  getDeployTransaction(
    _defaultSuffix: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_defaultSuffix, overrides || {});
  }
  attach(address: string): Hello {
    return super.attach(address) as Hello;
  }
  connect(signer: Signer): Hello__factory {
    return super.connect(signer) as Hello__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloInterface {
    return new utils.Interface(_abi) as HelloInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Hello {
    return new Contract(address, _abi, signerOrProvider) as Hello;
  }
}
